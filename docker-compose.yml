services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: nest_app
    working_dir: /app
    entrypoint: ["/app/docker-entrypoint.sh"]
    command: npm run dev:fast
    env_file: .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - CHOKIDAR_INTERVAL=${CHOKIDAR_INTERVAL}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}
      - DATABASE_URL=${DATABASE_URL}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
    ports:
      - "3000:3000"
    volumes:
      - ./:/app:delegated
      - node_modules:/app/node_modules
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: postgres_db
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  pgdata:
  node_modules: